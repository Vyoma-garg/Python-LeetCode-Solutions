# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:

        
    def isPalindrome(self, head: ListNode) -> bool:
        slow=head
        fast=head
        
        while(fast!=None and fast.next!=None):
            fast=fast.next.next
            slow=slow.next
            
        #slow=reversed(slow)
        
        temp=None
        while(slow):
            p=slow.next
            slow.next=temp
            temp=slow
            slow=p
            
        fast=head
        
        while(temp!=None):
            if temp.val!= fast.val:
                return False
            temp=temp.next
            fast=fast.next
        
        return True
   
        
