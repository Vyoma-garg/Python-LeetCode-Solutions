# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def getIntersectionNode(self, headA: ListNode, headB: ListNode) -> ListNode:
        ptr1=headA
        ptr2=headB 
        
        if headA==None:
            return headB
        if headB==None:
            return headA
        
        length1=0
        length2=0
        
        while(ptr1!=None):
            length1=length1+1
            ptr1=ptr1.next
            
        while(ptr2!=None):
            length2=length2+1
            ptr2=ptr2.next
        
        if length1>=length2:
            start=length1-length2
            small=headB
            large=headA
            
            
        else:
            start=length2-length1
            small=headA
            large=headB
        
        for i in range(start):
            large=large.next
            
        while(small!=large):
            small=small.next
            large=large.next
        return small
